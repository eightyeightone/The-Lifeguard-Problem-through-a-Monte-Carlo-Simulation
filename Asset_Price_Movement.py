#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Friday 15 January 2021.
Finished on January 2021. Report to accompany on GitHub (thirythreezero).

@author: h.

References:

"""
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
import math
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from pandas_datareader import data as wb
from scipy.stats import norm
from datetime import datetime
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
# Ticker and time horizon.
stock_ticker = 'TSLA'
start_date = '2020-01-01'
end_date = str(datetime.now().strftime('%Y-%m-%d')) # 24hr time conversion of .now().
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
def clean_stock_data(stock_data, col):
    weekdays = pd.date_range(start=start_date, end=end_date) # Non-trading day.
    cleaned_data = stock_data[col].reindex(weekdays) # Adjusted close, etc.
    cleaned_data = cleaned_data.fillna(method='ffill') # Filling all nan values.
    return cleaned_data
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
def vis_stock_data(stock_data, ticker):
    stock_data.info()
    print(f'{ticker} Head: \n {stock_data.head()}')
    print(f'\n{ticker} Tail: \n {stock_data.tail()}')
    return None
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
def pull_stock_data(ticker):
    stock_data = wb.DataReader(ticker, 'yahoo', start_date, end_date)
    #vis_stock_data(stock_data, ticker)
    adj_close = clean_stock_data(stock_data, 'Adj Close')
    #plot_bare_stock(adj_close, ticker)
    return None
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
def stock_data_sample():
    """
    Here I'll isolate the data so I'm only looking at 80%, the other 20% will
    be used for analysis, i.e. how close was the MCS to the true value?
    """
    return None

#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
def plot_bare_stock(stock_data, ticker):
    plt.plot(stock_data, 'r', label=ticker)

    plt.title(f'{ticker}: Price Data')
    plt.xlabel('Date (Y-M-D)')
    plt.ylabel('Adjusted Close Price (AUD$)')
    plt.legend()
    plt.grid()
    plt.show()
    return None
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
def plot_sample_stock():
    # Plotting stock data to show the out-of-sample? data
    return None


#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
def plot_MCS_stock():

    return None
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#









#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
pull_stock_data(stock_ticker)
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
































#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
